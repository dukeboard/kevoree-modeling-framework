#set($classDeclaration = $context.classDeclaration)
    public enum METAREFERENCES implements org.kevoree.modeling.api.meta.MetaReference {
#if($classDeclaration.references.size() == 0)
        ;//Nothing in this ENUM
#{else}

#set($relIdx = 0)
#set($relIdxMax = $classDeclaration.references.size() - 1)
#foreach($rel in $classDeclaration.references)
        ${rel.getName().toUpperCase()}("$rel.getName()",$enumIdx,#if($rel.contained)true#{else}false#end, #if($rel.single)true#{else}false#end, ${context.generationContext.metaModelPackage}.${context.generationContext.metaModelName}View.METACLASSES.${rel.getType().getFqn().toUpperCase().replace(".","_")})#if($relIdx < $relIdxMax),
#{else};
#end
    #set($enumIdx = $enumIdx + 1)
    #set($relIdx = $relIdx + 1)
#end
#end

        private final String _name;
        private final int _index;
        private final boolean _contained;
        private final boolean _single;
        private final org.kevoree.modeling.api.meta.MetaClass _metaType;

        METAREFERENCES(String name, int index, boolean contained, boolean single, org.kevoree.modeling.api.meta.MetaClass metaType) {
            this._name = name;
            this._index = index;
            this._contained = contained;
            this._single = single;
            this._metaType = metaType;
        }

        public int index() {
            return _index;
        }

        public String metaName() {
            return _name;
        }

        public boolean contained() {
            return _contained;
        }

        public boolean single() {
            return _single;
        }

        public org.kevoree.modeling.api.meta.MetaClass metaType() {
            return _metaType;
        }

        public org.kevoree.modeling.api.meta.MetaReference opposite() {
            switch(this) {
#foreach($rel in $classDeclaration.references)
                #if(${rel.getOpposite()})case ${rel.getName().toUpperCase()} : return ${rel.getType().getFqn()}.METAREFERENCES.${rel.opposite.name.toUpperCase()};
#end
#end
                default: return null;
            }
        }

        public org.kevoree.modeling.api.meta.MetaClass origin(){
            return ${context.generationContext.metaModelPackage}.${context.generationContext.metaModelName}View.METACLASSES.${classDeclaration.fqn.toUpperCase().replace(".","_")};
        }


    }

#* @vtlvariable name="context" type="org.kevoree.modeling.generator.ClassGenerationContext" *#
#* @vtlvariable name="classDeclaration" type="org.kevoree.modeling.ast.MModelClass" *#