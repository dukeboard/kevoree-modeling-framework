package ${context.metaModelPackage}.impl;

public class ${context.metaModelName}ViewImpl extends org.kevoree.modeling.api.abs.AbstractKView implements ${context.metaModelPackage}.${context.metaModelName}View {

    public ${context.metaModelName}ViewImpl(long p_now, org.kevoree.modeling.api.KDimension p_dimension) {
        super(p_now, p_dimension);
    }

    @Override
    protected org.kevoree.modeling.api.KObject internalCreate(org.kevoree.modeling.api.meta.MetaClass p_clazz, org.kevoree.modeling.api.time.TimeTree p_timeTree, long p_key) {
        if (p_clazz == null) {
            return null;
        }
        switch (p_clazz.index()) {
#set($clsIdx = 0)
#foreach($class in $context.model.classifiers)
    #set($lastIdx = $class.fqn.lastIndexOf(".")+1)
            case $clsIdx:
                return new ${class.fqn.substring(0,$class.fqn.lastIndexOf("."))}.impl.${class.fqn.substring($lastIdx)}Impl(this, ${context.metaModelPackage}.${context.metaModelName}View.METACLASSES.$class.fqn.toUpperCase().replace(".","_"), p_key, this.now(), this.dimension(), p_timeTree);
#set($clsIdx = $clsIdx+1)
#end
            default:
                return null;
        }
    }

    @Override
    public org.kevoree.modeling.api.meta.MetaClass[] metaClasses() {
        return ${context.metaModelPackage}.${context.metaModelName}View.METACLASSES.values();
    }

#foreach($class in $context.model.classifiers)
#set($lastIdx = $class.fqn.lastIndexOf(".")+1)
    @Override
    public $class.fqn create$class.fqn.substring($lastIdx)() {
        return ($class.fqn) this.create(METACLASSES.$class.fqn.toUpperCase().replace(".","_"));
    }
#end

}



#* @vtlvariable name="context" type="org.kevoree.modeling.generator.GenerationContext" *#