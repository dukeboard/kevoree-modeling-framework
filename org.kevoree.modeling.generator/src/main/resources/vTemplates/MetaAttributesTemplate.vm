#set($classDeclaration = $context.classDeclaration)
public enum METAATTRIBUTES implements org.kevoree.modeling.api.meta.MetaAttribute {
#if($classDeclaration.attributes.size() == 0)
;//Nothing in this ENUM
#{else}
#set($attIdx = 0)
#set($attIdxMax = $classDeclaration.attributes.size() - 1)
#foreach($attribute in $classDeclaration.attributes)
    ${attribute.getName().toUpperCase()}("$attribute.getName()",$enumIdx,#if($attribute.get)true#{else}false#end, #if($attribute.id)true#{else}false#end)#if($attIdx < $attIdxMax),
#{else};
#end
#set($enumIdx = $enumIdx + 1)
#set($attIdx = $attIdx + 1)
#end
#end


    private String name;

    private int index;

    private boolean learned;

    private boolean key;

    public int index() {
        return index;
    }

    public String metaName() {
        return name;
    }

    public boolean learned() {
        return learned;
    }

    public boolean key() {
        return key;
    }

    public org.kevoree.modeling.api.meta.MetaClass origin(){
        return ${context.generationContext.utilityPackage}.${context.generationContext.metaModelName}View.METACLASSES.${classDeclaration.fqn.toUpperCase().replace(".","_")};
    }

    METAATTRIBUTES(String name, int index, boolean learned, boolean key) {
        this.name = name;
        this.index = index;
        this.learned = learned;
        this.key = key;
    }
}


#* @vtlvariable name="context" type="org.kevoree.modeling.generator.ClassGenerationContext" *#
#* @vtlvariable name="classDeclaration" type="org.kevoree.modeling.ast.MModelClass" *#